# Trade Alert System Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# Google Cloud Configuration
# =============================================================================

# Your Google Cloud Project ID
GOOGLE_PROJECT_ID=your-trade-alerts-project

# Path to your Google Cloud service account credentials JSON file
GOOGLE_CREDENTIALS_FILE=path/to/credentials.json

# Path to your Gmail OAuth2 credentials JSON file (for development)
GMAIL_CREDENTIALS_FILE=path/to/gmail_credentials.json

# =============================================================================
# Pub/Sub Configuration
# =============================================================================

# Pub/Sub topic name for Gmail notifications
PUBSUB_TOPIC=gmail-trade-alerts

# Pub/Sub subscription name
PUBSUB_SUBSCRIPTION=gmail-alerts-sub

# Webhook subscription name (for push notifications)
PUBSUB_WEBHOOK_SUBSCRIPTION=gmail-webhook-sub

# =============================================================================
# Gmail Configuration
# =============================================================================

# Comma-separated list of email addresses to accept alerts from
GMAIL_SENDER_WHITELIST=alerts@tradingservice.com,notifications@broker.com

# Comma-separated list of keywords to look for in emails
GMAIL_ALERT_KEYWORDS=trade,alert,buy,sell,position

# Gmail label to monitor (optional, defaults to INBOX)
GMAIL_LABEL_FILTER=TradeAlerts

# =============================================================================
# Alpaca Trading Configuration
# =============================================================================

# Alpaca API credentials
ALPACA_API_KEY=your_alpaca_api_key
ALPACA_SECRET_KEY=your_alpaca_secret_key

# Alpaca environment (paper or live)
ALPACA_BASE_URL=https://paper-api.alpaca.markets
# For live trading: https://api.alpaca.markets

# =============================================================================
# LLM Configuration
# =============================================================================

# OpenAI API configuration
OPENAI_API_KEY=your_openai_api_key
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=1000

# Claude API configuration (alternative to OpenAI)
ANTHROPIC_API_KEY=your_anthropic_api_key

# =============================================================================
# Google Sheets Logging
# =============================================================================

# Google Sheets document ID for logging trades
GOOGLE_SHEETS_DOC_ID=your_google_sheets_document_id

# Name of the worksheet to log to
GOOGLE_SHEETS_WORKSHEET=TradeLog

# =============================================================================
# Web Server Configuration
# =============================================================================

# Host and port for the webhook server
HOST=0.0.0.0
PORT=8000

# Base URL for your deployed webhook (for Pub/Sub push subscriptions)
WEBHOOK_BASE_URL=https://your-app.onrender.com

# Secret for webhook signature verification (generate a random string)
WEBHOOK_SECRET=your_webhook_secret_key


# =============================================================================
# Trading Configuration
# =============================================================================

# Default position sizing
DEFAULT_POSITION_SIZE=1000
MAX_POSITION_SIZE=10000

# Risk management
MAX_DAILY_TRADES=10
MAX_PORTFOLIO_RISK=0.02

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/tradeflow.log

# =============================================================================
# Development Configuration
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Debug mode
DEBUG=True

# Enable/disable actual trading (set to False for testing)
ENABLE_TRADING=False